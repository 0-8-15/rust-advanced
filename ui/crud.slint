// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: MIT

import { LineEdit, Button, Slider, StandardListView, GridBox, HorizontalBox } from "std-widgets.slint";
import { GroupBox, VerticalBox, StandardButton } from "std-widgets.slint";

export component MainWindow inherits Window {
    in property <[StandardListViewItem]> names-list;
    out property <int> current-item: list.current-item;
    in-out property <string> name;
    out property <string> surname;
    out property <string> prefix;
    callback currentItemChanged <=> list.current-item-changed;
    callback prefixEdited();
    callback createClicked();
    callback updateClicked();
    callback deleteClicked();

    in-out property <string> last-error;

    GridBox {
        Text {
            text: "Filter prefix:";
            vertical-alignment: center;
            horizontal-alignment: right;
        }

        LineEdit {
            text <=> root.prefix;
            edited => { root.prefixEdited() }
        }

        list := StandardListView {
            row: 1;
            rowspan: 3;
            colspan: 2;
            model: root.names-list;
        }

        Text {
            col: 2;
            row: 1;
            text: "Name: ";
            vertical-alignment: center;
            horizontal-alignment: right;
        }

        LineEdit { text <=> root.name; }

        Text {
            col: 2;
            row: 2;
            text: "Surname: ";
            vertical-alignment: center;
            horizontal-alignment: right;
        }

        LineEdit { text <=> root.surname; }

        HorizontalBox {
            padding-left: 0;
            padding-bottom: 0;
            row: 4;
            alignment: start;

            Button {
                clicked => { root.createClicked() }

                text: "Create";
            }
            Button {
                clicked => { root.updateClicked() }

                text: "Update";
                enabled: list.current-item != -1 && list.current-item < root.names-list.length;

            }
            Button {
                clicked => { root.deleteClicked() }

                text: "Delete";
                enabled: list.current-item != -1 && list.current-item < root.names-list.length;
            }
        }
    }

    if last-error != "" : err := Rectangle {
        opacity: 1;
        background: root.background;
        border-color: red;
        border-width: 2px;
        border-radius: 6px;
        height: msg.min-height;
        width: msg.min-width * 1.1;
        msg := GroupBox {
            title: "Error";
            VerticalBox {
                width: 100%;
                Text {
                    text: last-error;
                    width: (root.width - clear.preferred-width) *0.8;
		    horizontal-alignment: left;
                    wrap: word-wrap;
                }
                clear := StandardButton { kind: close; clicked => { last-error = ""; } }
            }
        }
    }
}
